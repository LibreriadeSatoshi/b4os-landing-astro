---
// src/layouts/Layout.astro
export interface Props {
  title: string;
  description?: string;
}

const { title, description = "Programa gratuito de formación técnica para desarrolladores senior interesados en el ecosistema open source de Bitcoin en América Latina y el Caribe." } = Astro.props;
import '../styles/global.css';
---

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{title}</title>
    <meta name="description" content={description}>
    <meta name="keywords" content="Bitcoin FOSS, Lightning development, Bitcoin Latin America, Bitcoin Core, desarrollo Bitcoin, programación blockchain">
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website">
    <meta property="og:url" content="https://b4os.dev/">
    <meta property="og:title" content={title}>
    <meta property="og:description" content={description}>
    <meta property="og:image" content="/og-image.jpg">

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image">
    <meta property="twitter:url" content="https://b4os.dev/">
    <meta property="twitter:title" content={title}>
    <meta property="twitter:description" content={description}>
    <meta property="twitter:image" content="/og-image.jpg">

    <link rel="icon" type="image/svg+xml" href="/favicon.svg">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    
    <!-- Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=GA_MEASUREMENT_ID"></script>
    <script is:inline>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', 'GA_MEASUREMENT_ID');
    </script>
</head>
<body>
    <slot />
    
    <!-- Scripts optimizados para producción -->
    <script>
        // Función para cargar un script y esperar a que esté disponible
        async function loadScript(src, checkFunction, timeout = 5000) {
            return new Promise((resolve, reject) => {
                const script = document.createElement('script');
                script.src = src;
                script.type = 'text/javascript';
                
                let timeoutId = setTimeout(() => {
                    reject(new Error(`Timeout loading ${src}`));
                }, timeout);
                
                let checkInterval = setInterval(() => {
                    if (checkFunction()) {
                        clearTimeout(timeoutId);
                        clearInterval(checkInterval);
                        resolve();
                    }
                }, 50);
                
                script.onload = () => {
                    // Script file loaded, but we still wait for the check function
                };
                
                script.onerror = () => {
                    clearTimeout(timeoutId);
                    clearInterval(checkInterval);
                    reject(new Error(`Failed to load ${src}`));
                };
                
                document.head.appendChild(script);
            });
        }

        // Inicialización principal
        async function initializeB4OS() {
            try {
                // Cargar scripts en orden
                await loadScript('/js/location-api.js', () => typeof window.LocationAPI !== 'undefined');
                await loadScript('/js/form-handler.js', () => typeof window.FormHandler !== 'undefined');
                await loadScript('/js/main.js', () => true);
                
                // Verificar si hay formulario en la página
                const form = document.getElementById('registrationForm');
                if (!form) return;
                
                // Inicializar FormHandler
                const formHandler = new window.FormHandler();
                await formHandler.init();
                
                // Exponer para desarrollo (solo en localhost)
                if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {
                    window.debugFormHandler = formHandler;
                    window.clearLocationCache = () => formHandler.clearLocationCache();
                }
                
            } catch (error) {
                console.error('Error initializing B4OS:', error);
                
                // Fallback: cargar scripts de manera tradicional
                const scripts = ['/js/location-api.js', '/js/form-handler.js', '/js/main.js'];
                
                for (const src of scripts) {
                    const script = document.createElement('script');
                    script.src = src;
                    document.head.appendChild(script);
                }
                
                // Intentar inicialización después de un delay
                setTimeout(async () => {
                    if (typeof window.FormHandler !== 'undefined') {
                        const form = document.getElementById('registrationForm');
                        if (form) {
                            try {
                                const formHandler = new window.FormHandler();
                                await formHandler.init();
                                if (window.location.hostname === 'localhost') {
                                    window.debugFormHandler = formHandler;
                                }
                            } catch (fallbackError) {
                                console.error('Fallback initialization failed:', fallbackError);
                            }
                        }
                    }
                }, 1000);
            }
        }
        
        // Iniciar cuando el DOM esté listo
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', initializeB4OS);
        } else {
            setTimeout(initializeB4OS, 50);
        }
    </script>
</body>
</html>